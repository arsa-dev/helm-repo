# Default values for portal-objetos-aprendizaje.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

mysql:
  enabled: true
  mysqlUser: "portal-objetos-aprendizaje"
  mysqlPassword: "!ChangeMe!.123!"
  mysqlDatabase: "portal-objetos-aprendizaje"
  mysqlTablePrefix: "qvkei_"
  # If mysql deployment is enabled
  image:
    tag: "8"
    repository: mysql
    pullPolicy: IfNotPresent
    pullSecrets: []
  # If mysql deployment is not enabled
  mysqlHost: ""
  mysqlPort: 3306

kafka:
  enabled: true
  # If kafka deployment is enabled
  image:
    tag: "3.7"
    repository: bitnami/kafka
    pullPolicy: IfNotPresent
    pullSecrets: []
  zookeeper:
    image:
      tag: "3.9"
      repository: bitnami/zookeeper
      pullPolicy: IfNotPresent
      pullSecrets: []
  # If kafka deployment is not enabled
  kafkaHost: "override-kafka.host"
  kafkaPort: 9092

replicaCount: 1

admin:
  appKey: "base64:s2f6DZAfeRUGrnBwo/woMDP3Lp9w4ELdO0LEL537xHM="
  sessionLifetime: "120"
  colorPrimary: "#2C4C7E"
  colorSecondary: "#507AB9"
  generalErrorMessage: "Ha ocurrido un error"
  pwresTokenExpirationMin: "60"
  image:
    tag: "latest"
    repository: ghcr.io/objetos-aprendizaje/portal-administracion
    pullPolicy: IfNotPresent
    pullSecrets: []
web:
  image:
    tag: "latest"
    repository: ghcr.io/objetos-aprendizaje/portal-web
    pullPolicy: IfNotPresent
    pullSecrets: []

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# NOTE: HorizontalPodAutoscaler is not supported unless php session is stored in a shared storage
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# Other optional configurations and advanced features
nodeSelector: {}
tolerations: []
affinity: {}

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
