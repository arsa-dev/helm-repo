apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "portal-objetos-aprendizaje.fullname" . }}-admin
  labels:
    {{- include "portal-objetos-aprendizaje.labels" . | nindent 4 }}
    {{- include "portal-objetos-aprendizaje-admin.selectorLabels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "portal-objetos-aprendizaje-admin.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "portal-objetos-aprendizaje.labels" . | nindent 8 }}
        {{- include "portal-objetos-aprendizaje-admin.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.admin.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "portal-objetos-aprendizaje.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.admin.image.repository }}:{{ .Values.admin.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.admin.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: APP_ENV
              value: production
            - name: APP_DEBUG
              value: "true"

            - name: APP_NAME
              value: "ADMIN_PORTAL"
            - name: TIMEZONE_DISPLAY
              value: "Europe/Madrid"
            - name: TIMEZONE
              value: "UTC"
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.admin.appKeySecret }}"
                  key: app_key
            - name: SESSION_LIFETIME
              value: "{{ .Values.admin.sessionLifetime }}"
            - name: COLOR_PRIMARY
              value: "{{ .Values.admin.colorPrimary }}"
            - name: COLOR_SECONDARY
              value: "{{ .Values.admin.colorSecondary }}"
            - name: GENERAL_ERROR_MESSAGE
              value: "{{ .Values.admin.generalErrorMessage }}"
            - name: PWRES_TOKEN_EXPIRATION_MIN
              value: "{{ .Values.admin.pwresTokenExpirationMin }}"
            - name: FMNT_CERT_HEADER
              value: "{{ .Values.admin.fmntCertHeader }}"

            - name: APP_URL
              value: "{{ .Values.admin.publicUrl }}"
            - name: FRONT_URL
              value: "{{ .Values.web.publicUrl }}"

            - name: DB_CONNECTION
              value: pgsql
            - name: DB_HOST
              {{- if .Values.postgresql.enabled }}
              value: {{ include "portal-objetos-aprendizaje.fullname" . }}-postgresql-service
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgresql.postgresqlHostSecret }}"
                  key: host
              {{- end }}
            - name: DB_PORT
              {{- if .Values.postgresql.enabled }}
              value: "5432"
              {{- else }}
              value: "{{ .Values.postgresql.postgresqlPort }}"
              {{- end }}
            - name: DB_DATABASE
              value: "{{ .Values.postgresql.postgresqlDatabase }}"
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgresql.postgresqlUserSecret }}"
                  key: user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgresql.postgresqlPasswordSecret }}"
                  key: password
            - name: DB_PREFIX
              value: "{{ .Values.postgresql.postgresqlTablePrefix }}"

            - name: KAFKA_ENDPOINT
              {{- if .Values.kafka.enabled }}
              value: {{ include "portal-objetos-aprendizaje.fullname" . }}-kafka-service:9092
              {{- else }}
              value: "{{ .Values.kafka.kafkaHost }}:{{ .Values.kafka.kafkaPort }}"
              {{- end }}

          {{/*
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          */}}
          resources:
            {{- toYaml .Values.admin.resources | nindent 12 }}
          volumeMounts:
            - name: public-uploads
              mountPath: /var/www/html/public/images
            - name: protected-uploads
              mountPath: /var/www/html/storage
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: public-uploads
          persistentVolumeClaim:
            claimName: {{ tpl .Values.admin.existingPVClaimPublic . }}
        - name: protected-uploads
          persistentVolumeClaim:
            claimName: {{ tpl .Values.admin.existingPVClaimProtected . }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
